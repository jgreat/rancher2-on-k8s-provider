# Additional Trusted CAs.
# Enable this flag and add your CA certs as a secret named tls-ca-additional in the namespace.
# See README.md for details.
additionalTrustedCAs: false

# preferred or required
antiAffinity: preferred

# Audit Logs https://rancher.com/docs/rancher/v2.x/en/installation/api-auditing/
# The audit log is piped to the console of the rancher-audit-log container in the rancher pod.
# https://rancher.com/docs/rancher/v2.x/en/installation/api-auditing/
# destination stream to sidecar container console or hostPath volume
# level: Verbosity of logs, 0 to 3. 0 is off 3 is a lot.
auditLog:
  destination: sidecar
  hostPath: /var/log/rancher/audit/
  level: 0
  maxAge: 1
  maxBackup: 1
  maxSize: 100

# Have Rancher detect and import the "local" Rancher server cluster
# Adding the "local" cluster available in the GUI can be convenient, but any user with access to this cluster has "root" on any of the clusters that Rancher manages.
# options; "auto", "false". (auto pretty much means true)
addLocal: "auto"

# Image for collecting rancher audit logs.
busyboxImage: busybox

# Add debug flag to Rancher server
debug: false

etcd:
  # preferred or required
  antiAffinity: preferred
  persistance:
    # Use persistent storage
    enabled: true
    # Size in Gigabytes
    size: 8
    # storageClass:
  version: 3.2.26

kubeApiServer:
  # preferred or required
  antiAffinity: preferred
  image: rancher/hyperkube
  imageTag: v1.14.1-rancher1
  replicas: 2

kubeControllerManager:
  # preferred or required
  antiAffinity: preferred
  image: rancher/hyperkube
  imageTag: v1.14.1-rancher1
  replicas: 2

# k8sBackend
#   discrete - launch discrete etcd/api/controller-manager instance on top of k8s (non-RKE clusters)
#   rke - use RKE k8s as api and data store
k8sBackend: rke

# Extra environment variables passed to the rancher pods.
# extraEnv:
# - name: CATTLE_SYSTEM_DEFAULT_REGISTRY
#   value: "registry.example.com"

# Fully qualified name to reach your Rancher server
# hostname: rancher.my.org

## Optional array of imagePullSecrets containing private registry credentials
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# - name: secretName

### ingress ###
# Readme for details and instruction on adding tls secrets.
ingress:
  extraAnnotations: 
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
  tls:
    # rancher, letsEncrypt, secrets
    source: rancher

### LetsEncrypt config ###
# ProTip: The production environment only allows you to register a name 5 times a week.
#         Use staging until you have your config right.
letsEncrypt:
  # email: none@example.com
  environment: production

# If you are using certs signed by a private CA set to 'true' and set the 'tls-ca'
# in the 'rancher-system' namespace. See the README.md for details
privateCA: false

# http[s] proxy server passed into rancher server.
# proxy: http://<username>@<password>:<url>:<port>

# comma separated list of domains or ip addresses that will not use the proxy 
noProxy: 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16 

# Override rancher image location for Air Gap installs
rancherImage: rancher/rancher
# rancher/rancher image tag. https://hub.docker.com/r/rancher/rancher/tags/
# Defaults to .Chart.appVersion
# rancherImageTag: v2.0.7

# Number of Rancher server replicas.
replicas: 3

# Set pod resource requests/limits for Rancher.
resources: {}

# 
# tls
#   Where to offload the TLS/SSL encryption
# - ingress (default)
# - external
tls: ingress
